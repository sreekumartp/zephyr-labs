name: Zephyr CI

on: [push, pull_request]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: set-matrix
        run: |
          echo "üîç Discovering Zephyr apps..."
          apps=$(find apps -name prj.conf | sed 's|/prj.conf||' | sort)
          json=$(echo "$apps" | jq -R . | jq -cs .)
          echo "matrix={\"app\":$json}" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache west & Zephyr modules
        uses: actions/cache@v3
        with:
          path: |
            .west
            modules
            zephyr
          key: ${{ runner.os }}-west-${{ hashFiles('west.yml') }}

      - name: Cache Zephyr SDK
        uses: actions/cache@v3
        with:
          path: ~/zephyr-sdk
          key: ${{ runner.os }}-zephyr-sdk-v0.16.4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-pip python3-setuptools git \
            gcc g++ libncurses-dev libffi-dev \
            libssl-dev python3-dev libglib2.0-dev \
            libpixman-1-dev libc6-dev \
            gcc-multilib g++-multilib libc6-dev-i386

      - name: Install west and Zephyr dependencies
        run: |
          pip3 install west twister
          west init -m https://github.com/zephyrproject-rtos/zephyr .
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt

      - name: Install Zephyr SDK
        run: |
          if [ ! -d "$HOME/zephyr-sdk" ]; then
            wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            tar xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            mv zephyr-sdk-0.16.4 $HOME/zephyr-sdk
            $HOME/zephyr-sdk/setup.sh -h -c
          fi

      - name: Set Zephyr SDK env
        run: echo "ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk" >> $GITHUB_ENV

      - name: Build & test ${{ matrix.app }}
        run: |
          chmod +x scripts/build_app.sh
          ./scripts/build_app.sh "${{ matrix.app }}"

          # Check for test output presence
          BUILD_DIR="${{ matrix.app }}/build"
          if [ ! -d "$BUILD_DIR/twister-out" ] || [ -z "$(ls -A ${BUILD_DIR}/twister-out)" ]; then
            echo "‚ö†Ô∏è WARNING: No tests were found for app ${{ matrix.app }}."
          fi
          
      - name: Archive test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: twister-logs-${{ matrix.app }}
          path: |
            ${{ matrix.app }}/build/twister-out/
            twister-out*
