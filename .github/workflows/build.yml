name: Zephyr CI

on: [push, pull_request]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: set-matrix
        run: |
          echo "🔍 Discovering Zephyr apps..."
          apps=$(find apps -name prj.conf | sed 's|/prj.conf||' | sort)
          json=$(echo "$apps" | jq -R . | jq -cs .)
          echo "Discovered apps: $json"
          echo "matrix={\"app\":$json}" >> $GITHUB_OUTPUT

  build-apps:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3
      - name: Cache west modules
        uses: actions/cache@v3
        with:
          path: |
            .west
            modules
            zephyr
          key: ${{ runner.os }}-west-${{ hashFiles('west.yml') }}
      - name: Cache Zephyr SDK
        uses: actions/cache@v3
        with:
          path: ~/zephyr-sdk
          key: ${{ runner.os }}-zephyr-sdk-v0.16.4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-pip python3-setuptools git \
            gcc g++ libncurses-dev libffi-dev \
            libssl-dev python3-dev libglib2.0-dev \
            libpixman-1-dev libc6-dev \
            gcc-multilib g++-multilib libc6-dev-i386
      - name: Install west, twister and Zephyr dependencies
        run: |
          pip3 install west twister
          if [ -d ".west" ]; then
            echo ".west already exists, skipping west init"
          else
            west init -m https://github.com/zephyrproject-rtos/zephyr .
          fi
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt
      - name: Install Zephyr SDK
        run: |
          if [ ! -d "$HOME/zephyr-sdk" ]; then
            wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            tar xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            mv zephyr-sdk-0.16.4 $HOME/zephyr-sdk
            $HOME/zephyr-sdk/setup.sh -h -c
          fi
      - name: Set Zephyr SDK env
        run: echo "ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk" >> $GITHUB_ENV
      - name: Build ${{ matrix.app }}
        run: |
          echo "🔧 Building ${{ matrix.app }}..."
          west build -b native_sim ${{ matrix.app }} --build-dir ${{ matrix.app }}/build

  test-components:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache west modules
        uses: actions/cache@v3
        with:
          path: |
            .west
            modules
            zephyr
          key: ${{ runner.os }}-west-${{ hashFiles('west.yml') }}
      - name: Cache Zephyr SDK
        uses: actions/cache@v3
        with:
          path: ~/zephyr-sdk
          key: ${{ runner.os }}-zephyr-sdk-v0.16.4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-pip python3-setuptools git \
            gcc g++ libncurses-dev libffi-dev \
            libssl-dev python3-dev libglib2.0-dev \
            libpixman-1-dev libc6-dev \
            gcc-multilib g++-multilib libc6-dev-i386
      - name: Install west, twister and Zephyr dependencies
        run: |
          pip3 install west twister
          if [ -d ".west" ]; then
            echo ".west already exists, skipping west init"
          else
            west init -m https://github.com/zephyrproject-rtos/zephyr .
          fi
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt
      - name: Install Zephyr SDK
        run: |
          if [ ! -d "$HOME/zephyr-sdk" ]; then
            wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            tar xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            mv zephyr-sdk-0.16.4 $HOME/zephyr-sdk
            $HOME/zephyr-sdk/setup.sh -h -c
          fi
      - name: Set Zephyr SDK env
        run: echo "ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk" >> $GITHUB_ENV
      - name: Run event_bus tests
        run: |
          echo "🧪 Running event_bus tests..."
          west twister -p native_sim -T components/event_bus/tests --inline-logs
      - name: Archive test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: twister-logs-event-bus
          path: twister-out
          if-no-files-found: ignore

  test-washing-machine-fsm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # ... (steps for caching and dependency installation are identical to build-apps)
      - name: Install west, twister and Zephyr dependencies
        run: |
          pip3 install west twister
          if [ -d ".west" ]; then
            echo ".west already exists, skipping west init"
          else
            west init -m https://github.com/zephyrproject-rtos/zephyr .
          fi
          west update
          west zephyr-export
          pip3 install -r zephyr/scripts/requirements.txt
      - name: Install Zephyr SDK
        run: |
          if [ ! -d "$HOME/zephyr-sdk" ]; then
            wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            tar xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
            mv zephyr-sdk-0.16.4 $HOME/zephyr-sdk
            $HOME/zephyr-sdk/setup.sh -h -c
          fi
      - name: Set Zephyr SDK env
        run: echo "ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk" >> $GITHUB_ENV
      - name: Run FSM unit tests
        run: |
          echo "🧪 Running Washing Machine FSM tests..."
          west twister -p native_sim -T apps/washing_machine_sim/fsm/tests --inline-logs
      - name: Archive FSM test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: twister-logs-fsm
          path: twister-out
          if-no-files-found: ignore
